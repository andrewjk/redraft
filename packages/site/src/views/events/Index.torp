import { $page } from "@torpor/build/state";
import type UserModel from "../../types/UserModel";
import type FollowerModel from "../../types/FollowerModel";
import type ViewingModel from "../../types/ViewingModel";
import type PostPreviewModel from "../../types/posts/PostPreviewModel";
import post from "../$postInput";
import EventMenu from "./EventMenu.torp";
import PostInput from "../posts/PostInput.torp";
import PostList from "../posts/PostList.torp";
import Pagination from "../Pagination.torp";

export default function Index($props: { data: { posts: PostPreviewModel[], pageCount: number, viewing: ViewingModel, user: UserModel, follower: FollowerModel, base: string } }) {
	let $state = $watch({
		page: +($page.url.searchParams.get("page") || 1),
	})

	@head {
		<title>{$props.data.viewing.name} • Events • Redraft</title>
	}

	@render {
		<div class="vstack spaced events-page">
			<EventMenu section="Events" {$props.data.user} {$props.data.base} />
			@if ($props.data.user) {
				<PostInput {post} {$props.data.user} {$props.data.base} />
			}
			<PostList {$props.data.posts} {$props.data.user} {$props.data.follower} />
			<Pagination {$props.data.pageCount} {$state.page} href={(p: number) => `/?page=${p}`} />
		</div>
	}
}
