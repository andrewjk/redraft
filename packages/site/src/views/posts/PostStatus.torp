import PostPreview from './PostPreview.torp';

/**
 * Shows a post preview plus the failureers it couldn't be sent to.
 */
export default function PostStatus() {
	@render {
		<div class="vstack spaced-nr full-width post-status">
			<PostPreview {$props.data.post} {$props.data.user} {$props.data.follower} />
			@if ($props.data.failed.length > 0) {
				<form use:enhance method="POST" action="?/resendPost">
					<input type="hidden" name="id" value={$props.data.post.id} />
					<button>Resend</button>
				</form>
			}
			@for (let failure of $props.data.failed) {
				@key = post.id
				<div class="card full-width post-status-failure">
					<div class="hstack spaced">
						<div style="flex: 0 0 auto">
							<a href={failure.url}>
								<img class="post-status-failure-image" src={placeholdify(failure.image)} alt="{failure.name} ({stripProtocol(failure.url)})" />
							</a>
						</div>
						<div style="flex: 1 1 auto">
							<div class="post-status-failure-header hstack centered spaced">
								<a class="post-status-failure-link grow hstack spaced" href={failure.url}>
									<div class="grow vstack">
										<div class="post-status-failure-name">
											{failure.name}
										</div>
										<div class="post-status-failure-url secondary">
											{stripProtocol(failure.url)}
										</div>
									</div>
								</a>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	}

	@style {
		.post-status-failure-header {
			line-height: 1.4;
		}

		.post-status-failure-image {
			height: 40px;
			width: 40px;
			border: 1px solid var(--border-color);
			border-radius: 50%;
			box-shadow: 0 0.2rem 0.4rem #eee;
		}

		.post-status-failure-name {
			font-weight: bold;
		}
	}
}
