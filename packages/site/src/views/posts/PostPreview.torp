//import { enhance } from '$app/forms';
import placeholdify from "../../lib/utils/placeholdify";
import stripProtocol from "../../lib/utils/stripProtocol";
import pluralize from "../../lib/utils/pluralize"
import relativeTimeSince from "../../lib/utils/relativeTimeSince"
import stripProtocol from "../../lib/utils/stripProtocol";
import LinkPreview from './LinkPreview.torp';
import PushPin from "phosphor-torpor/lib/PushPin";
import PushPinSlash from "phosphor-torpor/lib/PushPinSlash";
import ChatCircle from "phosphor-torpor/lib/ChatCircle";
import Heart from "phosphor-torpor/lib/Heart";

/**
 * Shows a post preview for display in a list.
 */
export default function PostPreview() {
	let { post, user, follower } = $props;

	let fmt = new Intl.DateTimeFormat(undefined, {
		day: "numeric",
		month: "short",
		year: "numeric",
		hour: "numeric",
		minute: "numeric"
	});

	@render {
		<div class="post-preview card">
			<div class="post-preview-status hstack spaced-text">
				@if (post.pinned) {
					<div>Pinned</div>
				}
				@if (post.pinned && (post.republishedAt || post.visibility)) {
					<div class="menu-separator" />
				}
				@if (post.republishedAt) {
					<div title={fmt.format(new Date(post.republishedAt))}>
						Republished {relativeTimeSince(new Date(post.republishedAt))}
					</div>
				}
				@if (post.republishedAt && post.visibility) {
					<div class="menu-separator" />
				}
				@if (post.visibility) {
					<div>
						Visibility {visibilityText()}
					</div>
					@function visibilityText() {
						switch (post.visibility) {
							case 0: return "public";
							case 1: return "followers";
							case 2: return "private";
							case 3: return "recipients";
						}
					}
				}
			</div>
			<div class="hstack spaced">
				<div style="flex: 0 0 auto">
					<a href={post.author.url}>
						<img class="post-preview-author-image" src={placeholdify(post.author.image)} alt={`${post.author.name} (${stripProtocol(post.author.url)})`} />
					</a>
				</div>
				<div style="flex: 1 1 auto">
					<div class="post-preview-header hstack centered spaced">
						<a class="post-preview-link hstack spaced grow" href={post.author.url}>
							<div class="vstack">
								<div class="post-preview-name">
									{post.author.name}
								</div>
								<div class="post-preview-url">
									{stripProtocol(post.author.url)}
								</div>
							</div>
						</a>
						<div class="vstack align-end">
							<div class="post-preview-time" title={fmt.format(new Date(post.publishedAt))}>
								{relativeTimeSince(new Date(post.publishedAt))}
							</div>
							<div class="hstack spaced-text">
								@if (user?.url === post.author.url) {
									<form use:enhance method="POST" action="?/pinPost">
										<input type="hidden" name="slug" value={post.slug} />
										<input type="hidden" name="pinned" value={!post.pinned} />
										<button class="link icon">
											@if (post.pinned) {
												<PushPinSlash weight="bold" />
											} else {
												<PushPin weight="bold" />
											}
										</button>
									</form>
								} else if (post.pinned) {
									<span class="post-preview-time">
										<PushPin weight="fill" />
									</span>
									@/*
									@if (follower) {
										<span class="separator" />
									}
									*/
								} else {
									<span class="post-preview-time">&nbsp;</span>
								}
								@// TODO: How would we do this? We would need to post from the other user's site back to our site??
								@// Maybe this needs to wait until we have a browser plugin
								@/*
								@if (follower) {
									<form use:enhance method="POST" action="?/likeFeedPost">
										<input type="hidden" name="slug" value={post.slug} />
										<input type="hidden" name="authorUrl" value={post.author.url} />
										<input type="hidden" name="sharedKey" value={post.author.sharedKey} />
										<input type="hidden" name="liked" value={!post.liked} />
										<button class="link">{post.liked ? "Unlike" : "Like"}</button>
									</form>
									<span class="separator" />
									<form use:enhance method="POST" action="?/saveFeedPost">
										<input type="hidden" name="slug" value={post.slug} />
										<input type="hidden" name="saved" value={!post.saved} />
										<button class="link">{post.saved ? "Unsave" : "Save"}</button>
									</form>
								}
								*/
							</div>
						</div>
					</div>

					<div class="post-preview-body">
						<a class="post-preview-link" href="{post.author.url}posts/{post.slug}">
							@html(post.text)
							@if (post.image) {
								<p>
									<img class="post-preview-image" src={post.image} alt={post.imageAlt} />
								</p>
							}
						</a>
						@// NOTE: This has to go outside of the feed anchor
						@if (post.linkUrl) {
							<LinkPreview link={post} />
						}
					</div>

					<div class="post-preview-footer hstack centered">
						@if (post.isArticle) {
							<a href="{post.author.url}posts/{post.slug}">
								Read article
							</a>
						} else {
							<a href="{post.author.url}posts/{post.slug}">
								View
							</a>
						}
						<span class="hstack centered spaced-text">
							<ChatCircle weight="bold" />
							{post.commentCount}
						</span>
						<span class="hstack centered spaced-text">
							<Heart weight="bold" />
							{post.likeCount}
						</span>
						@if (post.emojiFirst) {
							<span>{post.emojiFirst}</span>
						}
						@if (post.emojiSecond) {
							<span>{post.emojiSecond}</span>
						}
						@if (post.emojiThird) {
							<span>{post.emojiThird}</span>
						}
					</div>
				</div>
			</div>
		</div>
	}

	@style {
		.post-preview {
		}

		.post-preview-status {
			color: gray;
			font-size: 75%;
			font-weight: bold;
			margin: -0.5rem 0 0.5rem 0;
		}

		.post-preview-header,
		.post-preview-footer {
			font-size: 90%;
			line-height: 1.4;
		}

		.post-preview-footer {
			gap: 2rem;
		}

		.post-preview-body {
			padding: 1rem 0;
		}

		.post-preview-link {
			color: inherit;
			text-decoration: none;
		}

		.post-preview-author-image {
			height: 40px;
			width: 40px;
			border: 1px solid #efefef;
			border-radius: 50%;
			box-shadow: 0 0.2rem 0.4rem #eee;
		}

		.post-preview-name {
			font-weight: bold;
		}

		.post-preview-url,
		.post-preview-time {
			color: gray;
		}

		.post-preview-image {
			margin: 0 auto;
		}

		.post-preview-footer {
			color: gray;
		}

		.separator {
			color: gray;
		}
	}
}
