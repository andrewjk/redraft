//import { enhance } from '$app/forms';
import pluralize from "@/lib/utils/pluralize"
import relativeTimeSince from "@/lib/utils/relativeTimeSince"

/**
 * Shows a article's full details.
 */
export default function ArticleView() {
	let { article, user, fuser } = $props.data;

	let fmt = new Intl.DateTimeFormat(undefined, {
		day: "numeric",
		month: "short",
		year: "numeric",
		hour: "numeric",
		minute: "numeric"
	});

	@render {
		<div class="article-view card">
			<div class="article-view-container">
				<div class="article-view-header hstack centered spaced">
					<a href={article.author.url}>
						<img class="article-view-image" src={article.author.image} alt="{article.author.name} ({article.author.url})" />
					</a>
					<a class="article-view-link hstack spaced" href={article.author.url}>
						<div class="vstack">
							<div class="article-view-name">
								{article.author.name}
							</div>
							<div class="article-view-url">
								{article.author.url}
							</div>
						</div>
					</a>
					<div class="spacer" />
					<div class="vstack align-end">
						<div class="article-view-time" title={fmt.format(new Date(article.createdAt))}>
							{relativeTimeSince(new Date(article.createdAt))}
						</div>
						<div class="hstack spaced">
							@if (user?.url === article.author.url) {
								<a href="/articles/edit/{article.slug}">Edit</a>
							} else {
								<span>&nbsp;</span>
							}
						</div>
					</div>
				</div>

				<div class="article-view-body">
					<h3>{article.title}</h3>
					<p>{article.text}</p>
				</div>

				<div class="article-view-footer hstack spaced">
					<span>
						{pluralize(article.commentCount, "comment")}
					</span>
					<span class="separator" />
					<span>
						{pluralize(article.likeCount, "like")}
					</span>
				</div>
			</div>

			@/* TODO:
			<div class="article-view-comments-container">
				<CommentList {article} {user} {fuser} comments={article.comments}/>
			</div>
			*/
		</div>
	}

	@style {
		.article-view {
			margin: 0 auto;
			max-width: 60rem;
			padding: 0;
			width: 100%;
		}

		.article-view-container,
		.article-view-comments-container {
			padding: 1rem;
		}

		.article-view-container {
			border-bottom: 1px solid lightgray;
		}

		.article-view-header,
		.article-view-footer {
			font-size: 90%;
			line-height: 1.4;
		}

		.article-view-body {
			padding: 1rem 0;
		}

		.article-view-link {
			color: inherit;
			text-decoration: none;
		}

		.article-view-image {
			height: 40px;
			width: 40px;
			border-radius: 50%;
		}

		.article-view-name {
			font-weight: bold;
		}

		.article-view-url,
		.article-view-time,
		.article-view-footer {
			color: gray;
		}

		.article-view-comments-container {
			background-color: #fcfcfc;
			border-radius: var(--brad);
			font-size: 85%;
		}
	}
}
