//import { enhance } from '$app/forms';
import pluralize from "@/lib/utils/pluralize"
import relativeTimeSince from "@/lib/utils/relativeTimeSince"
import CommentList from "@/views/comments/CommentList.torp"
import LinkPreview from '@/views/posts/LinkPreview.torp';
import { ARTICLE_POST, IMAGE_POST, LINK_POST } from "@/data/schema/postsTable";

/**
 * Shows a post's full details.
 */
export default function PostView() {
	let { post, user, fuser } = $props.data;

	let fmt = new Intl.DateTimeFormat(undefined, {
		day: "numeric",
		month: "short",
		year: "numeric",
		hour: "numeric",
		minute: "numeric"
	});

	@render {
		<div class="post-view card">
			<:head>
				<meta name="description" content={post.text} />
				<meta property="og:type" content="article" />
				@// <meta property="og:locale" content="en_US" />
				<meta property="og:site_name" content="Social" />
				<meta property="og:title" content={post.type === ARTICLE_POST ? post.title : "Social post"} />
				<meta property="og:description" content={post.text} />
				<meta property="og:url" content="{post.author.url}posts/${post.slug}" />
				@// <meta property="og:image" content="" />
				@// <meta property="og:image:width" content="1152" />
				@// <meta property="og:image:height" content="648" />
				@// <meta property="og:image:alt" content="todo" />
				@if (post.publishedAt) {
					<meta property="article:published_time" content={(new Date(post.publishedAt)).toISOString()} />
					<meta property="article:modified_time" content={(new Date(post.updatedAt)).toISOString()} />
				}
			</:head>

			<div class="post-view-container">
				<div class="post-view-header hstack centered spaced">
					<a href={post.author.url}>
						<img class="post-view-image" src={post.author.image} alt="{post.author.name} ({post.author.url})" />
					</a>
					<a class="post-view-link hstack spaced grow" href={post.author.url}>
						<div class="vstack">
							<div class="post-view-name">
								{post.author.name}
							</div>
							<div class="post-view-url">
								{post.author.url}
							</div>
						</div>
					</a>
					<div class="vstack align-end">
						<div class="post-view-time" title={fmt.format(new Date(post.createdAt))}>
							{relativeTimeSince(new Date(post.createdAt))}
						</div>
						@if (user?.url === post.author.url) {
							<a href="/posts/edit/{post.slug}">Edit</a>
						} else {
							<span>&nbsp;</span>
						}
					</div>
				</div>

				<div class="post-view-body">
					@switch (post.type) {
						case ARTICLE_POST: {
							<h3>{post.title}</h3>
							<p style="color: gray">{post.text}</p>
							<p>{post.articleText}</p>
						}
						case IMAGE_POST: {
							<p>{post.text}</p>
							<img src={post.image} />
						}
						case LINK_POST: {
							<p>{post.text}</p>
							<LinkPreview link={post} />
						}
						default: {
							<p>{post.text}</p>
						}
					}
				</div>

				@/*
				@if (post.tags.length) {
					<div class="post-view-tags-container">
						@for (let [i, tag] of post.tags.entries()) {
							@if (i > 0) {
								<span class="separator" />
							}
							<a href="/tags/{tag}">{tag}</a>
						}
					</div>
				}
				*/

				<div class="post-view-footer">
					<span>
						{pluralize(post.commentCount, "comment")}
					</span>
					<span class="separator" />
					<span>
						{pluralize(post.likeCount, "like")}
					</span>
					@for (let tag of post.tags) {
						<span class="separator" />
						<a href="/tags/{tag.slug}">{tag.text}</a>
					}
				</div>
			</div>

			<div class="post-view-comments-container">
				<CommentList {post} {user} {fuser} comments={post.comments}/>
			</div>
		</div>
	}

	@style {
		.post-view {
			margin: 0 auto;
			max-width: 60rem;
			padding: 0;
			width: 100%;
		}

		.post-view-container,
		.post-view-comments-container {
			padding: 1rem;
		}

		.post-view-container {
			border-bottom: 1px solid lightgray;
		}

		.post-view-header,
		.post-view-footer {
			font-size: 90%;
			line-height: 1.4;
		}

		.post-view-body {
			padding: 1rem 0;
		}

		.post-view-link {
			color: inherit;
			text-decoration: none;
		}

		.post-view-image {
			height: 40px;
			width: 40px;
			border-radius: 50%;
		}

		.post-view-name {
			font-weight: bold;
		}

		.post-view-url,
		.post-view-time,
		.post-view-footer {
			color: gray;
		}

		.separator {
			margin: 0 0.5rem;
		}

		.post-view-comments-container {
			background-color: #fcfcfc;
			border-radius: var(--brad);
			font-size: 85%;
		}
	}
}
